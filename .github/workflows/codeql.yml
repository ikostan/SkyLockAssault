---
name: "CodeQL Scan on Web Export"

on:  # yamllint disable-line rule:truthy
  # Makes it reusable; called by other workflows
  workflow_call:  # yamllint disable rule:empty-values

jobs:
  export-and-scan:
    runs-on: "ubuntu-latest"
    # Adding 'timeout-minutes: 10' would prevent jobs from running
    # indefinitely if something goes wrong
    timeout-minutes: 10
    permissions:
      actions: "read"
      contents: "read"
      # Needed to upload SARIF results
      security-events: "write"
    strategy:
      fail-fast: false
      matrix:
        # Limit to JS for export/web files
        language: ["javascript"]

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4"

      - name: "List files in export/web (for visibility)"
        run: |
          echo "Files to be scanned in export/web:"
          ls -R export/web || echo "No files found—check if folder exists!"

      - name: "Initialize CodeQL"
        uses: "github/codeql-action/init@v3"
        with:
          # yamllint disable rule:quoted-strings
          languages: ${{ matrix.language }}
          # References our path limiter
          config-file: ".github/codeql-config.yml"
          # Enables dep caching (minimal impact here but covers possibilities)
          dependency-caching: "true"
          # Enable debug for more detailed logs and artifacts
          debug: "false"

      - name: "Autobuild (optional for JS but included for completeness)"
        uses: "github/codeql-action/autobuild@v3"

      - name: "Perform CodeQL Analysis"
        uses: "github/codeql-action/analyze@v3"

      - name: "Post-scan summary (optional)"
        if: "always()"  # Run even if previous steps fail
        # yamllint disable rule:line-length
        run: |
          if [ -n "$(find . -name '*.sarif')" ]; then
            echo "Scan complete—check Security > Code scanning for results or download artifacts for debug info."
          else
            echo "Scan complete—no supported files or issues found. No results uploaded."
          fi
